export default {
  languages: {
    en: 'üåê Cambia a Ingl√©s',
    es: 'üåê Cambia a Espa√±ol',
  },
  home: {
    title: 'P√°gina de inicio',
    welcome: '¬°Bienvenido a <0>{{name}}!</0>',
    counters: 'Contadores',
    'client-counter': 'Contador de cliente',
    'server-counter': 'Contador de servidor',
  },
  about: {
    title: 'Acerca de Brisa',
    heading: '<0>Acerca de</0> Brisa',
    ready: '¬øListo para empezar?',
    more: 'Leer la documentaci√≥n',
    content: {
      title: '¬øCurioso por m√°s detalles? ¬°Vamos a profundizar!',
      parraphs: [
        'Brisa es el Framework de la Plataforma Web. Sus p√°ginas son componentes JSX renderizados din√°micamente en el servidor, por lo que no se env√≠a JavaScript al navegador por defecto.',
        'Todo se ejecuta exclusivamente en el servidor por defecto, excepto la carpeta de Web Components, que por supuesto tambi√©n se ejecuta en el cliente.',
        'Hemos resuelto la carga de escribir y procesar Web Components. Es f√°cil de escribir con Signals, renderizado en el lado del servidor, y optimizado en tiempo de compilaci√≥n para ser r√°pido y peque√±o; si usas Web Components, a√±ade +3KB.',
        'Tambi√©n puedes usar el compilador de Brisa para crear librerias de Web Components que funcionan en cualquier framework, o incluso sin framework, y son compatibles con el renderizado en el lado del servidor.',
        'Tambi√©n hemos resuelto las Server Actions. Con Brisa, los componentes del servidor pueden capturar cualquier evento del navegador: onSubmit, onInput, onFocus, onClick, y todos los eventos de los Web Components, como onClickOnMyComponent. Todos estos son ahora Server-Actions, por lo que ya no necesitas poner "use client" ni "use server". En el servidor, simplemente son Server-Actions, y en el cliente son simplemente eventos del navegador.',
        'Para hacer esto posible, hemos mejorado la comunicaci√≥n entre ambos mundos, creando nuevos conceptos como "Action Signals". Con estos, el servidor puede reaccionar a los Web Components sin necesidad de rerenders. Tambi√©n hemos a√±adido ideas de HTMX; tienes atributos extra en el HTML para hacer debounce o gestionar errores y estados pendientes.',
        'Brisa no solo usa Hypermedia, sino que la transmite por la red.',
        'Brisa tambi√©n es el √∫nico framework con soporte completo de Internacionalizaci√≥n. No solo en el enrutamiento, sino que tambi√©n puedes traducir tus p√°ginas y los nombres de las rutas si lo necesitas. Si usas i18n, los componentes del servidor ocupan 0 Bytes, pero en los Web Components son 800 B. Al final, usamos la Plataforma Web; hacemos un puente con la API Intl de ECMAScript para facilitar la traducci√≥n de tus Web Components.',
        'En Brisa nos gusta la idea de que todas las herramientas est√©n integradas, por eso Brisa est√° hecho con Bun. Hemos ampliado los Matchers y a√±adido una API para que puedas ejecutar con Bun los tests de tus Componentes.',
        'Bun es genial y mejora mucho la experiencia de desarrollo. Aunque recomendamos Bun.js tambi√©n como runtime, como salida puedes usar Node.js si lo prefieres, generar una salida est√°tica y subirla a un CDN, o generar una app ejecutable para Android (.apk), iOS (.ipa), Windows (.exe), Mac (.dmg), o Linux (.deb). S√≠, Brisa es multiplataforma gracias a su integraci√≥n con Tauri.',
        'Soportamos Pre-renderizado Parcial, puedes pre-renderizar solo una parte de tu p√°gina, como el pie de p√°gina.',
        'Tambi√©n soportamos muchas m√°s caracter√≠sticas como middleware, layouts, WebSockets, rutas API, suspense, etc.',
        'Brisa es el futuro de la Web, y el futuro es ahora. Te invitamos a probarlo y a contribuir a la comunidad.',
      ],
    },
  },
  'change-page': 'Cambia esta p√°gina en',
};
